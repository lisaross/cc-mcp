name: User Story
description: Create a user story for development (typically generated by agent workflow)
title: "[Story] "
labels: ["type:feature", "status:ready"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        This template is designed for user stories, typically generated by our agent workflow system. 
        For general feature requests, please use the Feature Request template instead.

  - type: input
    id: story-id
    attributes:
      label: Story ID
      description: Unique identifier for this story (e.g., CC-PHASE11-001)
      placeholder: CC-[PHASE]-###
    validations:
      required: true

  - type: textarea
    id: user-story  
    attributes:
      label: User Story
      description: The user story in standard format
      placeholder: As a [user type], I want [goal] so that [benefit].
    validations:
      required: true

  - type: dropdown
    id: user-persona
    attributes:
      label: Primary User Persona
      description: Who is the primary user for this story?
      options:
        - Individual Developer - Solo developers working on personal projects
        - Team Lead - Managing development teams and coordinating work
        - DevOps Engineer - Focused on automation and infrastructure
        - Enterprise Developer - Working within large organizations
        - Open Source Contributor - Contributing to or maintaining projects
        - CLI Power User - Heavy command-line interface users
        - New User - First-time users of CC-MCP
      default: 0
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: Detailed acceptance criteria in Given-When-Then format
      placeholder: |
        - [ ] Given [context], when [action], then [expected result]
        - [ ] Given [context], when [action], then [expected result]
        - [ ] Edge case: [scenario] results in [expected behavior]
        - [ ] Error handling: [invalid input] shows [helpful error message]
      value: |
        - [ ] 
        - [ ] 
        - [ ] 
    validations:
      required: true

  - type: textarea
    id: definition-of-done
    attributes:
      label: Definition of Done
      description: Criteria that must be met for this story to be considered complete
      placeholder: |
        - [ ] Code complete and reviewed
        - [ ] Unit tests written and passing
        - [ ] Documentation updated
        - [ ] User acceptance testing completed
        - [ ] Ready for deployment
      value: |
        - [ ] Code complete and reviewed
        - [ ] Unit tests written and passing  
        - [ ] Documentation updated
        - [ ] User acceptance testing completed
        - [ ] Ready for deployment
    validations:
      required: true

  - type: dropdown
    id: story-points
    attributes:
      label: Story Points
      description: Estimated effort for this story
      options:
        - "1 - XS: Very simple change (few hours)"
        - "2 - S: Small story (1-2 days)"
        - "3 - M: Medium story (2-3 days)"
        - "5 - L: Large story (1 week)"
        - "8 - XL: Extra large story (1-2 weeks)"
        - "13 - XXL: Epic-level work (needs breakdown)"
      default: 2
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Business Priority
      description: Business value and urgency of this story
      options:
        - Critical - Blocking release or major functionality
        - High - Important for user satisfaction
        - Medium - Standard priority story
        - Low - Nice to have, low impact
      default: 2
    validations:
      required: true

  - type: input
    id: epic
    attributes:
      label: Epic/Initiative
      description: Which epic or larger initiative does this story belong to?
      placeholder: "e.g., \"Phase 2: Security & Recovery\""
    validations:
      required: false

  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies
      description: Other stories or technical requirements this depends on
      placeholder: |
        - Story #XX must be completed first
        - Requires integration with [external system]
        - Blocked by [technical constraint]
    validations:
      required: false

  - type: textarea
    id: technical-notes
    attributes:
      label: Technical Notes
      description: Implementation considerations, architecture notes, or technical constraints
      placeholder: |
        - Should use existing [component/library]
        - Consider performance impact on [area]
        - Integration points: [list systems]
    validations:
      required: false

  - type: checkboxes
    id: story-areas
    attributes:
      label: Implementation Areas
      description: Which areas of the codebase will this story affect? (Check all that apply)
      options:
        - label: Core MCP management logic
        - label: CLI interface and commands
        - label: Configuration file handling
        - label: Error handling and user feedback
        - label: Security and validation
        - label: Documentation and help
        - label: Testing and quality assurance

  - type: textarea
    id: testing-strategy
    attributes:
      label: Testing Strategy
      description: How should this story be tested?
      placeholder: |
        - Unit tests for [components]
        - Integration tests for [workflows]
        - Manual testing scenarios: [list]
        - Performance testing: [if applicable]
    validations:
      required: false

  - type: input
    id: branch-name
    attributes:
      label: Suggested Branch Name
      description: Suggested branch name following our branching strategy
      placeholder: feature/[issue-number]-[brief-description]
    validations:
      required: false

  - type: checkboxes
    id: story-checklist
    attributes:
      label: Story Quality Checklist
      description: Verify this story meets INVEST criteria
      options:
        - label: Independent - Can be implemented without dependencies on other incomplete stories
        - label: Negotiable - Details can be adjusted during implementation
        - label: Valuable - Provides clear value to users
        - label: Estimable - Complexity and effort can be reasonably estimated
        - label: Small - Can be completed within a single sprint/iteration
        - label: Testable - Success criteria are clearly defined and verifiable